{
  "compilerOptions": {
    /*
    outDir
    Куда производится сборка.
    В нашем случае это не важно, потому что сборку собираем через webpack
    */
    "outDir": "./build/",
    /*
    noImplicitAny
    Подсвечивает все места где не указан тип
    Однако это не означает, что теперь вовсе нельзя использовать any.
    Это означает лишь, что в подобных ситуация разработчик должен явно писать any,
    */
    "noImplicitAny": true,
    "module": "es6",
    /*
    target
    В какую спецификацию компилируем: для поддержки большинства браузеров
    */
    "target": "es5",
    "jsx": "react",
    /*allowJS
    Компилятор будет обрабатывать не только TS файлы, но и JS файлы
    */
    "allowJs": true,
    "moduleResolution": "node",
    /*
    esModuleInterop позволяет работать с пакетами, которые используют
    common js как с обычными пакетами с помощью import (require() module.export) = common js
    import Moment from 'moment';
    без флага esModuleInterop результат undefined
    console.log(Moment);
    c флагом результат [object Object]
    console.log(Moment);
    */
    "esModuleInterop": true,
    /*
    allowSyntheticDefaultImports
    Если какая-либо библиотека не имеет default import,
    лоадеры вроде ts-loader или babel-loader автоматически создают их
    вместо такого импорта
    import * as React from 'react';
    можно писать такой
    import React from 'react';
    */
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  }
}